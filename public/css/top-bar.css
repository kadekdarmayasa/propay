.top-bar {
	position: sticky;
	top: 0;
	left: 300px;
	display: flex;
	width: calc(100% - 300px);
	justify-content: space-between;
	align-items: center;
	padding: 1em 2em;
	height: 80px;
	transition: 0.3s all ease;
	z-index: 10;
	background-color: rgba(var(--blue-color-opacity), 0.8);
	backdrop-filter: blur(4px);
}

.left-bar {
	display: flex;
	align-items: center;
}

.left-bar .bread-crumb {
	margin-left: 1em;
	display: flex;
}

.bread-crumb li span {
	display: inline-block;
	margin-right: 0.4em;
	color: var(--black-color);
}

body.dark li span {
	color: var(--white-color);
}

.bread-crumb li.active a {
	color: var(--black-color);
}

.bread-crumb li a.link:hover {
	color: var(--primary-color);
}

.bread-crumb li a {
	color: var(--black-color);
}

body.dark .bread-crumb li a {
	color: var(--white-color);
}

body.dark .bread-crumb li a {
	color: var(--white-color);
}

.sidebar-toggle {
	height: 46px;
	width: 46px;
	display: flex;
	flex-direction: column;
	justify-content: space-around;
	background-color: white;
	padding: 0.8em;
	border-radius: 50%;
	cursor: pointer;
	filter: drop-shadow(0px 10px 20px rgba(0, 0, 0, 0.05));
}

body.dark .sidebar-toggle {
	background-color: var(--sidebar-bg);
	filter: drop-shadow(0px 0px 0px rgba(255, 255, 255, 0.01));
}

.sidebar-toggle:hover {
	filter: drop-shadow(0px 10px 20px rgba(0, 0, 0, 0.08));
}

.sidebar-toggle span {
	height: 3px;
	border-radius: 4px;
	background-color: var(--black-color);
}

body.dark .sidebar-toggle span {
	background-color: var(--gray-color-200);
}

body.dark .top-bar {
	background-color: rgba(var(--black-opacity), 0.8);
}

.sidebar.close ~ .top-bar {
	left: 107px;
	width: calc(100% - 107px);
}

.notification-profile {
	position: relative;
}

.notification-profile .icons {
	display: flex;
	width: 80px;
	align-items: center;
	justify-content: space-between;
}

.notification {
	position: relative;
}

.notification-profile :is(.profile-toggle, .notification) {
	cursor: pointer;
}

.notification-profile svg {
	height: 30px;
	width: 28px;
}

.notification-profile svg.profile-toggle {
	width: 14px;
}

.notification span {
	position: absolute;
	top: -2px;
	right: 0;
	display: none;
	height: 18px;
	justify-content: center;
	align-items: center;
	width: 18px;
	color: var(--white-color);
	font-size: 0.5rem;
	font-weight: 500;
	border-radius: 50%;
	background-color: var(--primary-color);
}

.notification-profile hr {
	height: 1px;
	width: 20px;
	background-color: var(--black-color);
	transform: rotate(90deg);
	border-top: 1px solid var(--black-color);
}

body.dark .notification-profile hr {
	background-color: var(--white-color);
	border-top: 1px solid var(--white-color);
}

.notification-profile .icons svg:hover :is(path) {
	stroke: var(--primary-color);
}

.notification-profile svg :is(path) {
	stroke: var(--black-color);
	stroke-width: 1.5px;
}

body.dark .notification-profile svg :is(path) {
	stroke: var(--white-color);
}

.notification-profile .profile {
	background-color: rgba(255, 255, 255);
	position: absolute;
	width: 300px;
	height: 140px;
	padding: 1em;
	left: -220px;
	border-radius: 8px;
	bottom: -160px;
	box-shadow: 0 0 10px rgba(0, 0, 0, 0.08);
	transition: all 0.3s ease-in-out;
	scale: 0;
	opacity: 0;
	pointer-events: none;
}

.profile.show {
	scale: 1;
	opacity: 1;
	pointer-events: auto;
}

body.dark .notification-profile .profile {
	background-color: var(--sidebar-bg);
}

.profile .name {
	color: var(--black-color);
	font-weight: 500;
}

body.dark .profile .name {
	color: var(--white-color);
}

.profile .role {
	color: var(--gray-color-300);
	margin-top: 0.2em;
}

.profile hr {
	margin: 0.8em 0;
	height: 1px;
	width: 100%;
	transform: rotate(180deg);
	background-color: var(--gray-color-100);
	border-top: 1px solid var(--gray-color-100);
}

.profile a {
	display: flex;
	color: var(--black-color);
	font-size: 0.9rem;
	align-items: center;
}

body.dark .profile a {
	color: var(--white-color);
}

.profile a svg {
	margin-right: 0.4em;
	height: 24px;
	width: auto;
}

.profile a svg path {
	stroke: var(--black-color);
	stroke-width: 2px;
}

body.dark .profile a svg path {
	stroke: var(--white-color);
}

.profile a:hover {
	color: var(--primary-color) !important;
}

.profile a:hover svg :is(path, line, rect) {
	stroke: var(--primary-color) !important;
}
